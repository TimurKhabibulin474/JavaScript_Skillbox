import { isValidCardNumber, isValidCVC } from "./validator.js";

describe("Валидация номера карты", () => {
	test("Валидация номера карты пропускает корректный номер карты", () => {
		expect(isValidCardNumber("4916108926268679")).toBeTruthy();
	});
	test("Валидация номера карты не пропускает произвольную строку, содержащую любые нецифровые символы", () => {
		expect(isValidCardNumber("491610892eя,8679")).toBeFalsy();
	});
	test("Валидация номера карты не пропускает строку с недостаточным количеством цифр", () => {
		expect(isValidCardNumber("491610892626867")).toBeFalsy();
	});
	test("Валидация номера карты не пропускает строку со слишком большим количеством цифр", () => {
		expect(isValidCardNumber("4916108926268671234")).toBeFalsy();
	});
});

describe("Валидация CVV/CVC", () => {
	test("Валидация CVV/CVC пропускает строку с тремя цифровыми символами", () => {
		expect(isValidCVC("4916108926268679", "123")).toBeTruthy();
	});
	test("Валидация CVV/CVC пропускает строку с четырьмя цифровыми символами", () => {
		expect(isValidCVC("6011381019097359", "1234")).toBeTruthy();
	});
	test("Валидация CVV/CVC не пропускает строки с 1-2 цифровыми символами", () => {
		expect(isValidCVC("4916108926268679", "12")).toBeFalsy();
	});
	test("Валидация CVV/CVC не пропускает строки с 5+ цифровыми символами", () => {
		expect(isValidCVC("4916108926268679", "12345")).toBeFalsy();
	});
	test("Валидация CVV/CVC не пропускает строки с тремя нецифровыми символами", () => {
		expect(isValidCVC("4916108926268679", "wя,")).toBeFalsy();
	});
})


